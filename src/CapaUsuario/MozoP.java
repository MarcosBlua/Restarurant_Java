package CapaUsuario;

import CapaNegocio.Mozo;
import CapaNegocio.Mozos;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

public class MozoP extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    LinkedList<Object[]> datosTabla = new LinkedList<Object[]>();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    boolean bandModificar = false;
    boolean eraUsuario = false;
    Mozo mozo = new Mozo();
    int row;
    Calendar fechaAct = Calendar.getInstance();
    Date maxFecha;
    Date minFecha;

    public MozoP() {
        initComponents();
        
        /*Ajusta los limites para la fecha de nacimiento para que solo se puedan seleccionar personas 
        mayores de 16 años y menores de 90 años. Esto se hace tomando como base la fecha del sistema*/
        fechaAct.add(Calendar.YEAR, -16);
        maxFecha = new java.sql.Date(fechaAct.getTimeInMillis());
        fechaAct = Calendar.getInstance();
        fechaAct.add(Calendar.YEAR, -90);
        minFecha = new java.sql.Date(fechaAct.getTimeInMillis());
        
        jdcNacimiento.setMaxSelectableDate(maxFecha);
        jdcNacimiento.setMinSelectableDate(minFecha);
        
        //Crea las columnas del JTable
        modeloTabla.addColumn("Nombre y apellido");
        modeloTabla.addColumn("Cuil");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtMozos = new javax.swing.JTable();
        btnModificarMozo = new javax.swing.JButton();
        btnAgregarMozo = new javax.swing.JButton();
        btnEliminarMozo = new javax.swing.JButton();
        btnVerMozo = new javax.swing.JButton();
        pnlMozo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        txtCuil = new javax.swing.JFormattedTextField();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jdcNacimiento = new com.toedter.calendar.JDateChooser();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jtMozos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre y apellido", "Cuil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMozos.setColumnSelectionAllowed(true);
        jtMozos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtMozos);
        jtMozos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnModificarMozo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnModificarMozo.setText("Modificar Mozo");
        btnModificarMozo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMozoMouseClicked(evt);
            }
        });

        btnAgregarMozo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnAgregarMozo.setText("Agregar Mozo");
        btnAgregarMozo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMozoMouseClicked(evt);
            }
        });

        btnEliminarMozo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnEliminarMozo.setText("Eliminar Mozo");
        btnEliminarMozo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMozoMouseClicked(evt);
            }
        });

        btnVerMozo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnVerMozo.setText("Ver Mozo");
        btnVerMozo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerMozoMouseClicked(evt);
            }
        });

        pnlMozo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Mozo");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Apellido");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Cuil");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel5.setText("Dirección");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel6.setText("Nacimiento");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Mail");

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtApellido.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtDireccion.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtMail.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        try {
            txtCuil.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlMozoLayout = new javax.swing.GroupLayout(pnlMozo);
        pnlMozo.setLayout(pnlMozoLayout);
        pnlMozoLayout.setHorizontalGroup(
            pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMozoLayout.createSequentialGroup()
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMozoLayout.createSequentialGroup()
                        .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMozoLayout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jLabel1))
                            .addGroup(pnlMozoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(pnlMozoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlMozoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMozoLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlMozoLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMozoLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCuil)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMozoLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMozoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlMozoLayout.setVerticalGroup(
            pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMozoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellido))
                .addGap(18, 18, 18)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCuil))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDireccion))
                .addGap(18, 18, 18)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMail))
                .addGap(18, 18, 18)
                .addGroup(pnlMozoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jdcNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlMozo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModificarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnVerMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlMozo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarMozoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMozoMouseClicked
        clear();
        
        activarCarga();
    }//GEN-LAST:event_btnAgregarMozoMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        clear();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnModificarMozoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMozoMouseClicked
        bandModificar = true;
        
        cargarMozo();
        
        activarCarga();

        txtCuil.setEnabled(false);
    }//GEN-LAST:event_btnModificarMozoMouseClicked

    private void btnEliminarMozoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMozoMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtMozos.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay mozos cargados o no selecciono uno.");
        }else{
            if(Mensajes.msjConfim("¿Esta seguro que desea eliminar el mozo?") == JOptionPane.YES_OPTION){
                Mozo.eliminarMozo((Long)jtMozos.getValueAt(row, 1));
        
                cargarJTB();
            }
        }        
    }//GEN-LAST:event_btnEliminarMozoMouseClicked

    private void btnVerMozoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerMozoMouseClicked
        clear();
        
        cargarMozo();
    }//GEN-LAST:event_btnVerMozoMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        if(camposVacios()){
            Mensajes.msjError("Debe completar todos los campos. ");
        }else{
            if(!bandModificar){
                //Pasa la fecha de JavaDateChooser a sqlDate 
                java.sql.Date sqlDate = new java.sql.Date(jdcNacimiento.getDate().getTime());
                //Crea un mozo nuevo
                mozo = new Mozo(txtNombre.getText(), txtApellido.getText(), txtDireccion.getText(), txtMail.getText(), Long.parseLong(txtCuil.getText().replace("-", "")), sqlDate);
                //Guarda el resultado del proceso de guardado
                boolean resultadoDelGuardado = mozo.guardar();
                
                //Si el resultadoDelGuardado es false significa se tiene que mostrar en pantalla el mozo que se devolvio
                //Si el resultadoDelGuardado es true y no hay error en el mozo significa que el guardado fue exitoso
                if(!resultadoDelGuardado){
                    bandModificar = true;
                    cargarMozoNoActivo();
                }else if(resultadoDelGuardado && !mozo.getError()){
                    cargarJTB();
                    bandModificar = false;
                    clear();
                }
            }else{
                //Pasa la fecha de JavaDateChooser a sqlDate
                java.sql.Date sqlDate = new java.sql.Date(jdcNacimiento.getDate().getTime());
                //Crea un mozo vacio, carga sus datos y guarda la modificacion
                mozo = new Mozo(txtNombre.getText(), txtApellido.getText(), txtDireccion.getText(), txtMail.getText(), (Long.parseLong(txtCuil.getText().replace("-", ""))), sqlDate, false);
                
                mozo.guardarModificacion();
                
                cargarJTB();
                bandModificar = false;
                clear();
            }
        }
    }//GEN-LAST:event_btnGuardarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMozo;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarMozo;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificarMozo;
    private javax.swing.JButton btnVerMozo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcNacimiento;
    private javax.swing.JTable jtMozos;
    private javax.swing.JPanel pnlMozo;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JFormattedTextField txtCuil;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    //Carga JTable con datos
    public void cargarJTB(){
        vaciarTabla();
        
        Mozos.cargarTablaMozos(datosTabla);
        
        ManejoTablas.cargarTabla(datosTabla, modeloTabla);
        
        jtMozos.setModel(modeloTabla);
    }
    
    //Limpia campos de ingreso de datos, desactiva botones y resetea banderas
    public void clear(){
        bandModificar = false;
        eraUsuario = false;
        
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        txtApellido.setText("");
        txtApellido.setEnabled(false);
        txtCuil.setText("");
        txtCuil.setEnabled(false);
        txtDireccion.setText("");
        txtDireccion.setEnabled(false);
        txtMail.setText("");
        txtMail.setEnabled(false);
        jdcNacimiento.setDate(maxFecha);
        jdcNacimiento.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }
    
    //Limpia toda la pantalla
    public void clear_T(){
        clear();
        
        vaciarTabla();
    }
    
    //Vacia el JTable
    public void vaciarTabla(){
        DefaultTableModel dtm = (DefaultTableModel) jtMozos.getModel();
        dtm.setRowCount(0);
        jtMozos.setModel(dtm);
        
        datosTabla.clear();
    }
    
    //Activa los campos de carga de datos y botones correspondientes
    public void activarCarga(){
        txtNombre.setEnabled(true);
        txtApellido.setEnabled(true);
        txtCuil.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtMail.setEnabled(true);
        jdcNacimiento.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    //Carga los campos con los datos de un mozo seleccionado
    public void cargarMozo(){
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtMozos.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay mozos cargados o no selecciono uno.");
        }else{
            mozo = Mozo.traerUnMozo((Long)jtMozos.getValueAt(row, 1));
        
            txtNombre.setText(mozo.getNombre());
            txtApellido.setText(mozo.getApellido());
            txtCuil.setText(String.valueOf(mozo.getCuil()));
            txtDireccion.setText(mozo.getDireccion());
            txtMail.setText(mozo.getMail());
            jdcNacimiento.setDate(mozo.getNacimiento());
        }        
    }
    
    //Carga los campos con los datos que estan guardados en la variable mozo
    public void cargarMozoNoActivo(){
        txtNombre.setText(mozo.getNombre());
        txtApellido.setText(mozo.getApellido());
        txtCuil.setText(String.valueOf(mozo.getCuil()));
        txtDireccion.setText(mozo.getDireccion());
        txtMail.setText(mozo.getMail());
        jdcNacimiento.setDate(mozo.getNacimiento());
        txtCuil.setEnabled(false);        
    }
    
    //Verifica que los campos de datos esten cargados
    public boolean camposVacios(){
        return txtNombre.getText().equals("") || txtApellido.getText().equals("") || txtCuil.getText().equals("") || txtDireccion.getText().equals("") || txtMail.getText().equals("");
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarJTB();        
    }
}
