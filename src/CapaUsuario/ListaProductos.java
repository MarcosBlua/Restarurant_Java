package CapaUsuario;

import CapaNegocio.Producto;
import CapaNegocio.Productos;
import javax.swing.JOptionPane;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

public class ListaProductos extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    LinkedList<Object[]> datosTabla = new LinkedList<Object[]>();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    int row;
    Producto prod = new Producto();
    
    public ListaProductos() {
        initComponents();
        
        //Crea las columnas del JTable
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Descripción");
        modeloTabla.addColumn("Categoría");
        modeloTabla.addColumn("Precio");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        btnAgregarProducto = new javax.swing.JButton();
        btnModificarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        btnAdminCategorias = new javax.swing.JButton();
        btnVerProducto = new javax.swing.JButton();
        btnListaInsumos = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Descripción", "Categoría", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProductos.setColumnSelectionAllowed(true);
        jtProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtProductos);
        jtProductos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnAgregarProducto.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnAgregarProducto.setText("Agregar Producto");
        btnAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarProductoMouseClicked(evt);
            }
        });

        btnModificarProducto.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnModificarProducto.setText("Modificar Producto");
        btnModificarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarProductoMouseClicked(evt);
            }
        });

        btnEliminarProducto.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnEliminarProducto.setText("Eliminar Producto");
        btnEliminarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarProductoMouseClicked(evt);
            }
        });

        btnAdminCategorias.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnAdminCategorias.setText("Administrar Categorías");
        btnAdminCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdminCategoriasMouseClicked(evt);
            }
        });

        btnVerProducto.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnVerProducto.setText("Ver Producto");
        btnVerProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerProductoMouseClicked(evt);
            }
        });

        btnListaInsumos.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnListaInsumos.setText("Lista de insumos");
        btnListaInsumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListaInsumosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVerProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdminCategorias)
                            .addComponent(btnListaInsumos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdminCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListaInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarProductoMouseClicked
        Inicio.limpiarTodo();
        Inicio.prod.actualizarPantalla();
        Inicio.mostrarVentana(Inicio.prod);
    }//GEN-LAST:event_btnAgregarProductoMouseClicked

    private void btnModificarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarProductoMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtProductos.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay productos cargados.");
        }else{
            prod = Producto.traerUnProducto((Integer)jtProductos.getValueAt(row, 0));
        
            Inicio.limpiarTodo();
            Inicio.prod.actualizarPantalla();
            Inicio.prod.cargarProductoMod(prod);
            Inicio.mostrarVentana(Inicio.prod);
        }        
    }//GEN-LAST:event_btnModificarProductoMouseClicked

    private void btnVerProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerProductoMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtProductos.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay productos cargados.");
        }else{
            prod = Producto.traerUnProducto((Integer)jtProductos.getValueAt(row, 0));
        
            Inicio.limpiarTodo();
            Inicio.prod.actualizarPantalla();
            Inicio.prod.cargarProductoVer(prod);
            Inicio.mostrarVentana(Inicio.prod);
        }        
    }//GEN-LAST:event_btnVerProductoMouseClicked

    private void btnEliminarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarProductoMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtProductos.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay productos cargados.");
        }else{
            if(Mensajes.msjConfim("¿Esta seguro que desea eliminar el producto?") == JOptionPane.YES_OPTION){
                Producto.eliminarProducto((Integer)jtProductos.getValueAt(row, 0));
        
                cargarJTB();
            }
        }        
    }//GEN-LAST:event_btnEliminarProductoMouseClicked

    private void btnListaInsumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListaInsumosMouseClicked
        Inicio.limpiarTodo();
        Inicio.listIns.actualizarPantalla();
        Inicio.mostrarVentana(Inicio.listIns);
    }//GEN-LAST:event_btnListaInsumosMouseClicked

    private void btnAdminCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminCategoriasMouseClicked
        Inicio.limpiarTodo();
        Inicio.cat.actualizarPantalla();
        Inicio.mostrarVentana(Inicio.cat);
    }//GEN-LAST:event_btnAdminCategoriasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminCategorias;
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnListaInsumos;
    private javax.swing.JButton btnModificarProducto;
    private javax.swing.JButton btnVerProducto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtProductos;
    // End of variables declaration//GEN-END:variables
    //Carga JTable con datos
    public void cargarJTB(){
        clear_T();
        
        Productos.cargarTablaProductos(datosTabla);
        
        ManejoTablas.cargarTabla(datosTabla, modeloTabla);
        
        jtProductos.setModel(modeloTabla);
    }
    
    //Limpia toda la pantalla
    public void clear_T(){
        DefaultTableModel dtm = (DefaultTableModel) jtProductos.getModel();
        dtm.setRowCount(0);
        jtProductos.setModel(dtm);
        
        datosTabla.clear();
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarJTB();
    }
}
