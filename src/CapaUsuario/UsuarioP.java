package CapaUsuario;

import CapaNegocio.Usuario;
import CapaNegocio.Usuarios;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

public class UsuarioP extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    LinkedList<Object[]> datosTabla = new LinkedList<Object[]>();
    DefaultTableModel modeloTabla = new DefaultTableModel();    
    boolean bandModificar = false;
    Usuario usuario = new Usuario();
    int row;
    Calendar fechaAct = Calendar.getInstance();
    Date maxFecha;
    Date minFecha;
    
    
    public UsuarioP() {
        initComponents();
                
        /*Ajusta los limites para la fecha de nacimiento para que solo se puedan seleccionar personas 
        mayores de 16 años y menores de 90 años. Esto se hace tomando como base la fecha del sistema*/
        fechaAct.add(Calendar.YEAR, -16);
        maxFecha = new java.sql.Date(fechaAct.getTimeInMillis());
        fechaAct = Calendar.getInstance();
        fechaAct.add(Calendar.YEAR, -90);
        minFecha = new java.sql.Date(fechaAct.getTimeInMillis());
        
        jdcNacimiento.setMaxSelectableDate(maxFecha);
        jdcNacimiento.setMinSelectableDate(minFecha);
        
        //Crea las columnas del JTable
        modeloTabla.addColumn("Nombre y apellido");
        modeloTabla.addColumn("Cuil");
        
        cbxNivel.addItem("User");
        cbxNivel.addItem("Admin");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JScrollPane = new javax.swing.JScrollPane();
        jtUsuarios = new javax.swing.JTable();
        btnAgregarUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        btnVerUsuario = new javax.swing.JButton();
        pnlUsuario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtContra = new javax.swing.JTextField();
        txtCuil = new javax.swing.JFormattedTextField();
        jdcNacimiento = new com.toedter.calendar.JDateChooser();
        cbxNivel = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jtUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre y apellido", "Cuil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtUsuarios.setColumnSelectionAllowed(true);
        jtUsuarios.getTableHeader().setReorderingAllowed(false);
        JScrollPane.setViewportView(jtUsuarios);
        jtUsuarios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnAgregarUsuario.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnAgregarUsuario.setText("Agregar Usuario");
        btnAgregarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarUsuarioMouseClicked(evt);
            }
        });

        btnModificarUsuario.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnModificarUsuario.setText("Modificar Usuario");
        btnModificarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarUsuarioMouseClicked(evt);
            }
        });

        btnEliminarUsuario.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnEliminarUsuario.setText("Eliminar Usuario");
        btnEliminarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarUsuarioMouseClicked(evt);
            }
        });

        btnVerUsuario.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnVerUsuario.setText("Ver Usuario");
        btnVerUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerUsuarioMouseClicked(evt);
            }
        });

        pnlUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel1.setText("Usuario");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel3.setText("Apellido");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel4.setText("Cuil");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel5.setText("Dirección");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel6.setText("Mail");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel7.setText("Nacimiento");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel8.setText("Contraseña");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel9.setText("Usuario");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        jLabel10.setText("Nivel");

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtApellido.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtDireccion.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtMail.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtUsuario.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtContra.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        try {
            txtCuil.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cbxNivel.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlUsuarioLayout = new javax.swing.GroupLayout(pnlUsuario);
        pnlUsuario.setLayout(pnlUsuarioLayout);
        pnlUsuarioLayout.setHorizontalGroup(
            pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(52, 52, 52)
                        .addComponent(txtApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(95, 95, 95)
                        .addComponent(txtMail, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(54, 54, 54)
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre)))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(43, 43, 43)
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(txtCuil)))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(22, 22, 22)
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                .addComponent(jdcNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(19, 19, 19)
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancelar))
                            .addComponent(txtContra, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(cbxNivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlUsuarioLayout.setVerticalGroup(
            pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCuil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jdcNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbxNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAgregarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVerUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarUsuario))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregarUsuario)
                            .addComponent(btnEliminarUsuario))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificarUsuario)
                            .addComponent(btnVerUsuario))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarUsuarioMouseClicked
        clear();
        
        activarCarga();
    }//GEN-LAST:event_btnAgregarUsuarioMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        clear();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnModificarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarUsuarioMouseClicked
        bandModificar = true;
        
        activarCarga();
        
        cargarUsuario();
               
        txtCuil.setEnabled(false);
    }//GEN-LAST:event_btnModificarUsuarioMouseClicked

    private void btnEliminarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtUsuarios.getSelectedRow();
        
        if(row == -1){
            Mensajes.msjError("No hay usuarios cargados o no selecciono uno.");
        }else{
            if(Mensajes.msjConfim("¿Esta seguro que desea eliminar el usuario?") == JOptionPane.YES_OPTION){
                Usuario.eliminarUsuario((Long)jtUsuarios.getValueAt(row, 1));
        
                cargarJTB();
            }
        }        
    }//GEN-LAST:event_btnEliminarUsuarioMouseClicked

    private void btnVerUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerUsuarioMouseClicked
        clear();
        
        cargarUsuario();
    }//GEN-LAST:event_btnVerUsuarioMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        if(camposVacios()){
            Mensajes.msjError("Debe completar todos los campos. ");
        }else{
            if(!bandModificar){
                //Pasa la fecha de JavaDateChooser a sqlDate
                java.sql.Date sqlDate = new java.sql.Date(jdcNacimiento.getDate().getTime());
                //Crea un usuario nuevo
                usuario = new Usuario(txtUsuario.getText(), txtContra.getText(), cbxNivel.getSelectedIndex() + 1, txtNombre.getText(), txtApellido.getText(), txtDireccion.getText(), txtMail.getText(), Long.parseLong(txtCuil.getText().replace("-", "")), sqlDate);
                //Guarda el resultado del proceso de guardado
                boolean resultadoDelGuardado = usuario.guardar();
                
                //Si el resultadoDelGuardado es false significa se tiene que mostrar en pantalla el usuario que se devolvio
                //Si el resultadoDelGuardado es true y no hay error en el usuario significa que el guardado fue exitoso
                if(!resultadoDelGuardado){
                    bandModificar = true;   
                    cargarUsuarioNoActivo();
                }else if(resultadoDelGuardado && !usuario.getError()){
                    cargarJTB();
                    bandModificar = false;
                    clear();
                }
            }else{
                //Pasa la fecha de JavaDateChooser a sqlDate
                java.sql.Date sqlDate = new java.sql.Date(jdcNacimiento.getDate().getTime());
                //Crea un usuario vacio, carga sus datos y guarda la modificacion
                usuario = new Usuario(txtUsuario.getText(), txtContra.getText(), (cbxNivel.getSelectedIndex() + 1), txtNombre.getText(), 
                        txtApellido.getText(), txtDireccion.getText(), txtMail.getText(), (Long.parseLong(txtCuil.getText().replace("-", ""))), sqlDate, false);
                
                usuario.guardarModificacion();
                
                //Si no hay error durante el guardado de la modificacion se termina el proceso
                if(!usuario.getError()){
                    cargarJTB();
                    bandModificar = false;
                    clear();
                }
            }
        }
    }//GEN-LAST:event_btnGuardarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.JButton btnAgregarUsuario;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnVerUsuario;
    private javax.swing.JComboBox<String> cbxNivel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.calendar.JDateChooser jdcNacimiento;
    private javax.swing.JTable jtUsuarios;
    private javax.swing.JPanel pnlUsuario;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtContra;
    private javax.swing.JFormattedTextField txtCuil;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
    //Carga JTable con datos
    public void cargarJTB(){
        vaciarTabla();
        
        Usuarios.cargarTablaUsuarios(datosTabla);
        
        ManejoTablas.cargarTabla(datosTabla, modeloTabla);
        
        jtUsuarios.setModel(modeloTabla);
    }
    
    //Limpia campos de ingreso de datos, desactiva botones y resetea banderas
    public void clear(){
        bandModificar = false;
        
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        txtApellido.setText("");
        txtApellido.setEnabled(false);
        txtCuil.setText("");
        txtCuil.setEnabled(false);
        txtDireccion.setText("");
        txtDireccion.setEnabled(false);
        txtMail.setText("");
        txtMail.setEnabled(false);
        jdcNacimiento.setDate(maxFecha);
        jdcNacimiento.setEnabled(false);
        txtUsuario.setText("");
        txtUsuario.setEnabled(false);
        txtContra.setText("");
        txtContra.setEnabled(false);
        cbxNivel.setEnabled(false);
        
        btnGuardar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }
    
    //Limpia toda la pantalla
    public void clear_T(){
        clear();
        
        vaciarTabla();
    }
    
    //Vacia el JTable
    public void vaciarTabla(){
        DefaultTableModel dtm = (DefaultTableModel) jtUsuarios.getModel();
        dtm.setRowCount(0);
        jtUsuarios.setModel(dtm);
        
        datosTabla.clear();
    }
    
    //Activa los campos de carga de datos y botones correspondientes
    public void activarCarga(){
        txtNombre.setEnabled(true);
        txtApellido.setEnabled(true);
        txtCuil.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtMail.setEnabled(true);
        jdcNacimiento.setEnabled(true);
        txtUsuario.setEnabled(true);
        txtContra.setEnabled(true);
        cbxNivel.setEnabled(true);
        
        btnGuardar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    //Carga los campos con los datos de un usuario seleccionado
    public void cargarUsuario(){
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtUsuarios.getSelectedRow();
        
        if(row == -1){
            clear();
            Mensajes.msjError("No hay usuarios cargados o no selecciono uno.");
        }else{
            usuario = Usuario.traerUnUsuario((Long)jtUsuarios.getValueAt(row, 1));
            
            txtNombre.setText(usuario.getNombre());
            txtApellido.setText(usuario.getApellido());
            txtCuil.setText(String.valueOf(usuario.getCuil()));
            txtDireccion.setText(usuario.getDireccion());
            txtMail.setText(usuario.getMail());
            jdcNacimiento.setDate(usuario.getNacimiento());
            txtUsuario.setText(usuario.getUser());
            txtContra.setText(usuario.getPassword());
            cbxNivel.setSelectedIndex(usuario.getNivel() - 1);
        }        
    }
    
    //Carga los campos con los datos que estan guardados en la variable usuario
    public void cargarUsuarioNoActivo(){
        txtNombre.setText(usuario.getNombre());        
        txtApellido.setText(usuario.getApellido());
        txtCuil.setText(String.valueOf(usuario.getCuil()));
        txtDireccion.setText(usuario.getDireccion());
        txtMail.setText(usuario.getMail());
        jdcNacimiento.setDate(usuario.getNacimiento());
        txtCuil.setEnabled(false);
        txtUsuario.setText(usuario.getUser());
        txtContra.setText(usuario.getPassword());
        cbxNivel.setSelectedIndex(usuario.getNivel() - 1);
    }
    
    //Verifica que los campos de datos esten cargados
    public boolean camposVacios(){
        return txtNombre.getText().equals("") || txtApellido.getText().equals("") || txtCuil.getText().equals("") || txtDireccion.getText().equals("") || txtMail.getText().equals("") || txtUsuario.getText().equals("") || txtContra.getText().equals("");
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarJTB();        
    }
}
