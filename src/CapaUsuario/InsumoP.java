package CapaUsuario;

import CapaNegocio.Categoria;
import CapaNegocio.Categorias;
import CapaNegocio.Insumo;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;

public class InsumoP extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    Insumo insumo = new Insumo();
    boolean bandModificar = false;
    
    public InsumoP() {
        initComponents();
        
        cbxUnidad.addItem("Gramos");
        cbxUnidad.addItem("Mililitros");
        cbxUnidad.addItem("Unidades");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        cbxCategoria = new javax.swing.JComboBox<>();
        cbxUnidad = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        jLabel1.setText("Insumo");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Descripción");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Categoría");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel5.setText("Precio");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel6.setText("Stock");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Unidad de Medida");

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtStock.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        txtStock.setText("1");
        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStockKeyPressed(evt);
            }
        });

        txtDescripcion.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        txtPrecio.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        txtPrecio.setText("0");
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioKeyPressed(evt);
            }
        });

        cbxCategoria.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        cbxUnidad.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar))
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(txtStock, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(txtNombre)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(cbxCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxUnidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbxUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        clear();
        
        Inicio.limpiarTodo();
        Inicio.listIns.actualizarPantalla();
        Inicio.mostrarVentana(Inicio.listIns);
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        if((Integer)cbxCategoria.getSelectedIndex() == -1){
            Mensajes.msjError("No hay categorias cargadas en el sistema.");
        }else{
            Categoria cat = (Categoria) cbxCategoria.getSelectedItem();
                                
            if(!bandModificar){
                insumo = new Insumo(txtNombre.getText(), cat.getIdCategoria(), txtDescripcion.getText(), Float.valueOf(txtPrecio.getText()), Float.valueOf(txtStock.getText()), cbxUnidad.getSelectedIndex());
                
                if(!insumo.getError()){
                    insumo.guardarInsumo();
                
                    clear();
        
                    Inicio.limpiarTodo();
                    Inicio.listIns.actualizarPantalla();
                    Inicio.mostrarVentana(Inicio.listIns);
                }else{
                     Mensajes.msjError(insumo.getMensaje());
                }
                
            }else{
                insumo = new Insumo(insumo.getIdInsumo(), txtNombre.getText(), cat.getIdCategoria(), txtDescripcion.getText(), Float.valueOf(txtPrecio.getText()), insumo.getStock(), cbxUnidad.getSelectedIndex());
                
                if(!insumo.getError()){
                    insumo.modificarInsumo();    
                
                    clear();
        
                    Inicio.limpiarTodo();
                    Inicio.listIns.actualizarPantalla();
                    Inicio.mostrarVentana(Inicio.listIns);
                }else{
                     Mensajes.msjError(insumo.getMensaje());
                }           
                
            }
        }        
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void txtPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyPressed
        //Solo permite el ingreso de numeros en el campo precio
        txtPrecio.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c >= '0') && (c <= '9') || !(c != '.') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
    }//GEN-LAST:event_txtPrecioKeyPressed

    private void txtStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyPressed
        //Solo permite el ingreso de numeros enteros en el campo stock 
        txtStock.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c >= '0') && (c <= '9') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
    }//GEN-LAST:event_txtStockKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<Categoria> cbxCategoria;
    private javax.swing.JComboBox<String> cbxUnidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
    //Limpia campos de ingreso de datos y reseta banderas
    public void clear(){
        bandModificar = false;
        
        txtDescripcion.setText("");
        txtNombre.setText("");
        txtPrecio.setText("");
        txtStock.setText("");
    }
    
    //Carga los datos de un insumo parametro en la pantalla, se utiliza al querer modificar el insumo
    public void cargarInsumo(Insumo ins){
        actualizarPantalla();
        
        
        insumo = ins;
        bandModificar = true;
        Categoria cat = new Categoria();
        cat = Categoria.traerUnaCategoria(ins.getIdCategoria());
        
        txtNombre.setText(ins.getNombre());
        txtDescripcion.setText(ins.getDescripcion());
        txtPrecio.setText(String.valueOf(ins.getCosto()));        
        txtStock.setEnabled(false);
        cbxCategoria.setSelectedItem(cat);
        cbxUnidad.setSelectedIndex(ins.getUnidad());
    }
    
    //Carga JComboBox con datos
    public void cargarCBX(){
        cbxCategoria.removeAll();
        
        LinkedList<Categoria> listaCategorias = new LinkedList();
        
        Categorias.cargarCBXCategoria(listaCategorias);
        
        DefaultComboBoxModel<Categoria> comboModel = new DefaultComboBoxModel(listaCategorias.toArray());
        
        cbxCategoria.setModel(comboModel);
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarCBX();
    }
}
