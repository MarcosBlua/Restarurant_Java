package CapaUsuario;

import CapaNegocio.Insumo;
import CapaNegocio.Insumos;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

public class Stock extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    LinkedList<Object[]> datosTabla = new LinkedList<Object[]>();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    Insumo insumo = new Insumo();

    public Stock() {
        initComponents();
        
        //Crea las columnas del JTable
        modeloTabla.addColumn("IdInsumo");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Cantidad");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtStocks = new javax.swing.JTable();
        pnlInsumo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNombreInsumo = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnModificarStock = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jtStocks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdInsumo", "Nombre", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtStocks.setColumnSelectionAllowed(true);
        jtStocks.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtStocks);
        jtStocks.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        pnlInsumo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Insumo");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Cantidad");

        lblNombreInsumo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblNombreInsumo.setText("(Nombre del insumo)");

        txtCantidad.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        txtCantidad.setText("0");
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });

        btnQuitar.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnQuitar.setText("Quitar");
        btnQuitar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQuitarMouseClicked(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlInsumoLayout = new javax.swing.GroupLayout(pnlInsumo);
        pnlInsumo.setLayout(pnlInsumoLayout);
        pnlInsumoLayout.setHorizontalGroup(
            pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsumoLayout.createSequentialGroup()
                .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInsumoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(pnlInsumoLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInsumoLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(84, 84, 84)
                                .addComponent(lblNombreInsumo))
                            .addGroup(pnlInsumoLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlInsumoLayout.createSequentialGroup()
                                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlInsumoLayout.setVerticalGroup(
            pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsumoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblNombreInsumo))
                .addGap(26, 26, 26)
                .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnQuitar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addContainerGap())
        );

        btnModificarStock.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnModificarStock.setText("Modificar Stock");
        btnModificarStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarStockMouseClicked(evt);
            }
        });

        btnAtras.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtrasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificarStock, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAtras, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInsumo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModificarStock, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        //Solo permite el ingreso de numeros enteros en el campo cantidad
        txtCantidad.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c >= '0') && (c <= '9') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void btnAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseClicked
        Inicio.limpiarTodo();
        Inicio.listIns.actualizarPantalla();
        Inicio.mostrarVentana(Inicio.listIns);
    }//GEN-LAST:event_btnAtrasMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        clear();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnModificarStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarStockMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        int row = jtStocks.getSelectedRow();
        if(row == -1){
            Mensajes.msjError("No hay insumos cargados.");
        }else{
            
            insumo = Insumo.traerUnInsumo((Integer)jtStocks.getValueAt(row, 0));
            
            lblNombreInsumo.setText(insumo.getNombre());
            txtCantidad.setEnabled(true);
            btnAgregar.setEnabled(true);
            btnQuitar.setEnabled(true);
            btnCancelar.setEnabled(true);
        }
    }//GEN-LAST:event_btnModificarStockMouseClicked

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        if(txtCantidad.getText().equals("")){
            Mensajes.msjError("Ingrese una cantidad a agregar.");
        }else{
            Insumo.actualizarStock(insumo.getIdInsumo(), Float.parseFloat(txtCantidad.getText()), true);
            clear();
            cargarJTB();
        }        
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnQuitarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuitarMouseClicked
        if(txtCantidad.getText().equals("")){
            Mensajes.msjError("Ingrese una cantidad a quitar.");
        }else{
            float cantidad = Float.parseFloat(txtCantidad.getText());
            //Verifica que la cantidad que se intenta sacar no sea mayor a la cantidad de stock actual
            if(cantidad > insumo.getStock()){
                Mensajes.msjError("No se puede sacar mas stock del existente.");
            }else{
                Insumo.actualizarStock(insumo.getIdInsumo(), Float.parseFloat(txtCantidad.getText()), false);
                clear();
                cargarJTB();
            }
        } 
    }//GEN-LAST:event_btnQuitarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnModificarStock;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtStocks;
    private javax.swing.JLabel lblNombreInsumo;
    private javax.swing.JPanel pnlInsumo;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
    //Limpia campos de ingreso de datos y desactiva botones
    public void clear(){
        lblNombreInsumo.setText("(Nombre del insumo)");
        txtCantidad.setText("0");
        txtCantidad.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnQuitar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }
    
    //Limpia toda la pantalla
    public void clear_T(){
        clear();
        
        vaciarTabla();
    }
    
    //Vacia el JTable
    public void vaciarTabla(){
        DefaultTableModel dtm = (DefaultTableModel) jtStocks.getModel();
        dtm.setRowCount(0);
        jtStocks.setModel(dtm);
        
        datosTabla.clear();
    }
    
    //Carga JTable con datos
    public void cargarJTB(){
        vaciarTabla();
        
        Insumos.cargarTablaStocks(datosTabla);
        
        ManejoTablas.cargarTabla(datosTabla, modeloTabla);
        
        jtStocks.setModel(modeloTabla);
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarJTB();
    }
}
