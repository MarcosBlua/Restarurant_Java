package CapaUsuario;

import CapaNegocio.Comanda;
import CapaNegocio.Comandas;
import CapaNegocio.Mozo;
import CapaNegocio.Mozos;
import CapaDatos.Config;
import CapaNegocio.Validaciones;
import java.sql.Date;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ComandasActivas extends javax.swing.JPanel {
    //Variables usadas para guardar datos a mostrar en pantalla
    LinkedList<Object[]> datosTabla = new LinkedList<Object[]>();
    DefaultTableModel modeloTabla = new DefaultTableModel();
    boolean bandModificar = false;
    int row;
    Comanda comanda = new Comanda();
    Mozo moz = new Mozo();
    

    public ComandasActivas() {
        initComponents();
        
        //Crea las columnas del JTable
        modeloTabla.addColumn("NroComanda");
        modeloTabla.addColumn("Mesa");
        modeloTabla.addColumn("Mozo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtComandas = new javax.swing.JTable();
        btnAgregarComanda = new javax.swing.JButton();
        btnEliminarComanda = new javax.swing.JButton();
        btnModificarComanda = new javax.swing.JButton();
        pnlComanda = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxNroMesa = new javax.swing.JComboBox<>();
        cbxMozo = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnIrAComanda = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 580));
        setMinimumSize(new java.awt.Dimension(800, 580));
        setPreferredSize(new java.awt.Dimension(800, 580));

        jtComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NroComanda", "Comanda", "Mesa", "Mozo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtComandas.setColumnSelectionAllowed(true);
        jtComandas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtComandas);
        jtComandas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnAgregarComanda.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnAgregarComanda.setText("Agregar Comanda");
        btnAgregarComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarComandaMouseClicked(evt);
            }
        });

        btnEliminarComanda.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnEliminarComanda.setText("Eliminar Comanda");
        btnEliminarComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarComandaMouseClicked(evt);
            }
        });

        btnModificarComanda.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnModificarComanda.setText("Modificar Comanda");
        btnModificarComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarComandaMouseClicked(evt);
            }
        });

        pnlComanda.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Comanda");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("NÂ°Mesa");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Mozo");

        cbxNroMesa.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        cbxMozo.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlComandaLayout = new javax.swing.GroupLayout(pnlComanda);
        pnlComanda.setLayout(pnlComandaLayout);
        pnlComandaLayout.setHorizontalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel1))
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxNroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlComandaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlComandaLayout.setVerticalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxNroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(41, 41, 41)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIrAComanda.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnIrAComanda.setText("Ir a Comanda");
        btnIrAComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIrAComandaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(pnlComanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarComanda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificarComanda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarComanda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIrAComanda, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(pnlComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(btnIrAComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarComandaMouseClicked
        clear();
        
        activarCarga();
    }//GEN-LAST:event_btnAgregarComandaMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        clear();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnModificarComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarComandaMouseClicked
        bandModificar = true;
        
        activarCarga();
        
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtComandas.getSelectedRow();
        if(row == -1){
            Mensajes.msjError("No hay comandas activas.");
        }else{
            comanda = Comanda.traerComanda((Integer)jtComandas.getValueAt(row, 0));
            moz = Mozo.traerUnMozo(comanda.getCuilMozo());
            
            cbxNroMesa.getModel().setSelectedItem(comanda.getNroMesa());
            cbxMozo.setSelectedItem(moz);
        }        
    }//GEN-LAST:event_btnModificarComandaMouseClicked

    private void btnEliminarComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarComandaMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtComandas.getSelectedRow();
        if(row == -1){
            Mensajes.msjError("No hay comandas activas.");
        }else{
            if(Mensajes.msjConfim("Â¿Esta seguro que desea eliminar la comanda?") == JOptionPane.YES_OPTION){
                Comanda.eliminarComanda((Integer)jtComandas.getValueAt(row, 0));
        
                clear();
        
                cargarJTB();
            }
        }        
    }//GEN-LAST:event_btnEliminarComandaMouseClicked

    private void btnIrAComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIrAComandaMouseClicked
        //Utiliza el numero de row para verificar que haya un elemento seleccionado
        row = jtComandas.getSelectedRow();
        if(row == -1){
            Mensajes.msjError("No hay comandas activas.");
        }else{
            //Cambia a pantalla Comanda enviadole la comanda a mostrar
            comanda = Comanda.traerComanda((Integer)jtComandas.getValueAt(row, 0));
            Inicio.limpiarTodo();
            Inicio.com.actualizarPantalla(comanda);
            Inicio.mostrarVentana(Inicio.com);
        }        
    }//GEN-LAST:event_btnIrAComandaMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        //Verifica que no se pueda crear una comanda para una mesa que ya tiene comanda activa
        if(!Validaciones.comandaDeMesaActiva(Integer.valueOf((String)cbxNroMesa.getSelectedItem())) ||  Integer.valueOf((String)cbxNroMesa.getSelectedItem()) == comanda.getNroMesa()){
            if((Integer)cbxMozo.getSelectedIndex() == -1){
                Mensajes.msjError("No hay mozos cargados en el sistema.");
            }else{
                moz = (Mozo) cbxMozo.getSelectedItem();
                if(!bandModificar){
                    //Toma fecha y hora del sistema
                    long millis = System.currentTimeMillis();
                    Date fechaActual = new Date(millis);                
            
                    comanda = new Comanda(fechaActual, Integer.valueOf((String)cbxNroMesa.getSelectedItem()), moz.getCuil());
            
                    comanda.guardarComanda();
                
                    Mensajes.msjOk("Comanda guardada con Ã©xito");
                }else{
                    comanda.modificarComanda(Integer.valueOf((String)cbxNroMesa.getSelectedItem()), moz.getCuil());
                
                    Mensajes.msjOk("Modificaciones guardadas con Ã©xito");
                }
            
                clear();
            
                cargarJTB();
            }
            
        }else{
            Mensajes.msjError("Esta mesa ya posee una comanda activa. ");
        }         
    }//GEN-LAST:event_btnGuardarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarComanda;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarComanda;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnIrAComanda;
    private javax.swing.JButton btnModificarComanda;
    private javax.swing.JComboBox<Mozo> cbxMozo;
    private javax.swing.JComboBox<String> cbxNroMesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtComandas;
    private javax.swing.JPanel pnlComanda;
    // End of variables declaration//GEN-END:variables
    //Carga JComboBox con datos
    public void cargarCBX(){
        //Toma la cantidad de mesa del archivo de configuracion
        Config conf = new Config();
        int mesas = conf.getMesas();
        
        cbxNroMesa.removeAllItems();
        
        for(int cont = 1; cont <= mesas; cont++){
            cbxNroMesa.addItem(Integer.toString(cont));
        }
        
        LinkedList<Mozo> listaMozos = new LinkedList();
        
        Mozos.cargarCBXMozos(listaMozos);
        
        DefaultComboBoxModel<Mozo> comboMozo = new DefaultComboBoxModel(listaMozos.toArray());
        
        cbxMozo.setModel(comboMozo);
    }
    
    //Carga JTable con datos
    public void cargarJTB(){
        vaciarTabla();
        
        Comandas.cargarTablaComandasActivas(datosTabla);
        
        ManejoTablas.cargarTabla(datosTabla, modeloTabla);
        
        jtComandas.setModel(modeloTabla);
    }
    
    //Limpia campos de ingreso de datos, desactiva botones y resetea banderas
    public void clear(){
        bandModificar = false;
        cbxMozo.setEnabled(false);
        cbxNroMesa.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }
    
    //Limpia toda la pantalla
    public void clear_T(){
        clear();
        
        vaciarTabla();
        
        cbxNroMesa.removeAll();
        cbxMozo.removeAll();
    }
    
    //Vacia el JTable
    public void vaciarTabla(){
        DefaultTableModel dtm = (DefaultTableModel) jtComandas.getModel();
        dtm.setRowCount(0);
        jtComandas.setModel(dtm);
        
        datosTabla.clear();
    }
    
    //Activa los campos de carga de datos y botones correspondientes
    public void activarCarga(){
        cbxMozo.setEnabled(true);
        cbxNroMesa.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    //Actualiza la pantalla
    public void actualizarPantalla(){
        cargarCBX();
        
        cargarJTB();
    }
}
